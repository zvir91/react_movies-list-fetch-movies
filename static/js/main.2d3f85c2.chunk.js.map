{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","imgUrl","_jsxs","className","children","_jsx","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onClick","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","hasError","setError","_useState7","_useState8","loader","setLoader","_Fragment","onSubmit","event","preventDefault","trim","fetch","concat","then","res","json","catch","Response","Error","getMovie","toLowerCase","result","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","currentTarget","cn","disabled","App","setMovies","currentMovie","setCurrentMovie","newMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACrCC,EAAUD,EAAMC,QAA2B,QAAjBD,EAAMC,OAClCD,EAAMC,OACN,4DAEJ,OACEC,eAAA,OAAKC,UAAU,OAAO,UAAQ,YAAWC,SAAA,CACvCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACE,UAAQ,cACRC,IAAKL,EACLM,IAAI,kBAIVL,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJC,IAAI,aAIVF,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAa,UAAQ,aAAYC,SAAEJ,EAAMQ,aAI1DN,eAAA,OAAKC,UAAU,UAAU,UAAQ,mBAAkBC,SAAA,CAChDJ,EAAMS,YACPJ,cAAA,SACAA,cAAA,KAAGK,KAAMV,EAAMW,QAAS,UAAQ,WAAUP,SAAC,iBAOrD,ECvCaQ,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDR,cAAA,OAAKF,UAAU,SAAQC,SACpBS,EAAOC,KAAI,SAAAd,GAAK,OACfK,cAACP,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,sBCND,IAAMC,EAA4B,SAAHjB,GAAqB,IAAfkB,EAAOlB,EAAPkB,QAC1CC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAA0BL,mBAAuB,MAAKM,EAAAJ,YAAAG,EAAA,GAA/CxB,EAAKyB,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA6BR,mBAA+B,MAAKS,EAAAP,YAAAM,EAAA,GAA1DE,EAAQD,EAAA,GAAEE,EAAQF,EAAA,GACzBG,EAA4BZ,oBAAS,GAAMa,EAAAX,YAAAU,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA+BxB,OACE9B,eAAAiC,WAAA,CAAA/B,SAAA,CACEF,eAAA,QACEC,UAAU,aACViC,SA5BiB,SAACC,GACtBA,EAAMC,iBACe,KAAjBhB,EAAMiB,SACRL,GAAU,GCrBT,SAAkBZ,GACvB,OAAOkB,MAAM,GAADC,OAHE,2CAGS,OAAAA,OAAMnB,IAC1BoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,mBACR,GACL,CDeMC,CAAS1B,EAAM2B,eACZP,MAAM,SAAAQ,GACD,UAAWA,EACbpB,EAASoB,GAETxB,EAAS,CACPlB,MAAO0C,EAAOC,MACd1C,YAAayC,EAAOE,KACpBnD,OAAQiD,EAAOG,OACf1C,QAAQ,8BAAD8B,OAAgCS,EAAOI,QAC9CvC,OAAQmC,EAAOI,QAGrB,IACCC,SAAQ,WACPrB,GAAU,EACZ,IAEN,EAM+B9B,SAAA,CAEzBF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQqD,QAAQ,cAAapD,SAAC,gBAI/CC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE,UAAQ,aACRoD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxD,UAAU,kBACVyD,MAAOtC,EACPuC,SAhDQ,SAACxB,GACnBd,EAASc,EAAMyB,cAAcF,OAC7B9B,EAAS,KACX,MAgDWD,GACDxB,cAAA,KAAGF,UAAU,iBAAiB,UAAQ,eAAcC,SAAC,4CAMzDF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,eACRoD,KAAK,SACLtD,UAAW4D,IAAG,kBAAmB,CAAE,aAAc9B,IACjD+B,SAAoB,KAAV1C,EAAalB,SACxB,mBAKHC,cAAA,OAAKF,UAAU,UAASC,SACpBJ,GACAK,cAAA,UACE,UAAQ,YACRoD,KAAK,SACLtD,UAAU,oBACVc,QAAS,WACHjB,IACFiB,EAAQjB,GACRuB,EAAS,IACTG,EAAS,MAEb,EAAEtB,SACH,4BAQRJ,GACCE,eAAA,OAAKC,UAAU,YAAY,UAAQ,mBAAkBC,SAAA,CACnDC,cAAA,MAAIF,UAAU,QAAOC,SAAC,YACtBC,cAACP,EAAS,CAACE,MAAOA,SAK5B,EE/GaiE,EAAM,WACjB,IAAA/C,EAA4BC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAA1CL,EAAMO,EAAA,GAAE8C,EAAS9C,EAAA,GACxBI,EAAwCL,mBAAwB,IAAGM,EAAAJ,YAAAG,EAAA,GAA5D2C,EAAY1C,EAAA,GAAE2C,EAAe3C,EAAA,GAapC,OACEvB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACO,EAAU,CAACC,OAAQA,MAGtBR,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACW,EAAS,CACRC,QAnBS,SAACoD,GACZA,EAAStD,SAAWoD,IACtBD,EAAU,GAADzB,OAAA6B,YACJzD,GAAM,CACTwD,KAGFD,EAAgBC,EAAStD,QAE7B,QAeF,EC9BAwD,IAASC,OAAOnE,cAAC4D,EAAG,IAAKQ,SAASC,eAAe,Q","file":"static/js/main.2d3f85c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const imgUrl = (movie.imgUrl && movie.imgUrl !== 'N/A')\n    ? movie.imgUrl\n    : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Prop = {\n  onClick: (value: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Prop> = ({ onClick }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setError] = useState<ResponseError | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n    setError(null);\n  };\n\n  const onButtonSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (query.trim() !== '') {\n      setLoader(true);\n      getMovie(query.toLowerCase())\n        .then((result => {\n          if ('Error' in result) {\n            setError(result as ResponseError);\n          } else {\n            setMovie({\n              title: result.Title,\n              description: result.Plot,\n              imgUrl: result.Poster,\n              imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n              imdbId: result.imdbID,\n            });\n          }\n        }))\n        .finally(() => {\n          setLoader(false);\n        });\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onButtonSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n          { (hasError) && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': loader })}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            { movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    onClick(movie);\n                    setQuery('');\n                    setMovie(null);\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=59a5a400';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\n// console.log(getMovie());\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [currentMovie, setCurrentMovie] = useState<string | null>('');\n\n  const addMovie = (newMovie: Movie) => {\n    if (newMovie.imdbId !== currentMovie) {\n      setMovies([\n        ...movies,\n        newMovie,\n      ]);\n\n      setCurrentMovie(newMovie.imdbId);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onClick={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}